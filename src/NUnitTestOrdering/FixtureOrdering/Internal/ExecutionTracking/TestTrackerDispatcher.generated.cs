// ******************************************************************************
//  © 2016 Sebastiaan Dammann - damsteen.nl
// 
//  File:           : Test.cs
//  Project         : NUnitTestOrdering.Tests
// ******************************************************************************

// <autogenerated>
// This file is generated by TestTrackerDispatcher.tt. Any changes will be lost
// when the file is regenerated. Do not edit this file.
// </autogenerated>

namespace NUnitTestOrdering.FixtureOrdering.Internal.ExecutionTracking {
    using NUnit.Framework;
    using NUnit.Framework.Interfaces;
    using NUnit.Framework.Internal;

    internal sealed class TestTrackerDispatcher {
		private readonly ITestTracker<TestMethod> _testMethodExecutionTracker;
		private readonly ITestTracker<OrderedTestSpecificationFixture> _orderedTestSpecificationFixtureExecutionTracker;
		private readonly ITestTracker<TestFixture> _testFixtureExecutionTracker;

        public TestTrackerDispatcher(TestExecutionTrackingContext trackingContext) {
            this._testMethodExecutionTracker = new TestMethodExecutionTracker(trackingContext);
            this._orderedTestSpecificationFixtureExecutionTracker = new OrderedTestSpecificationFixtureExecutionTracker(trackingContext);
            this._testFixtureExecutionTracker = new TestFixtureExecutionTracker(trackingContext);
        }

        public void TrackExecution(ITest test, TestContext currentTestContext) {
            {
                TestMethod fixture = test as TestMethod;

                if (fixture != null) {
                    this._testMethodExecutionTracker.TrackExecution(fixture, currentTestContext);
                    return;
                }
            }
            {
                OrderedTestSpecificationFixture fixture = test as OrderedTestSpecificationFixture;

                if (fixture != null) {
                    this._orderedTestSpecificationFixtureExecutionTracker.TrackExecution(fixture, currentTestContext);
                    return;
                }
            }
            {
                TestFixture fixture = test as TestFixture;

                if (fixture != null) {
                    this._testFixtureExecutionTracker.TrackExecution(fixture, currentTestContext);
                    return;
                }
            }
        }

        public void HandleTestStart(ITest test, TestExecutionContext executionContext) {
            {
                TestMethod fixture = test as TestMethod;

                if (fixture != null) {
                    this._testMethodExecutionTracker.HandleTestStart(fixture, executionContext);
                    return;
                }
            }
            {
                OrderedTestSpecificationFixture fixture = test as OrderedTestSpecificationFixture;

                if (fixture != null) {
                    this._orderedTestSpecificationFixtureExecutionTracker.HandleTestStart(fixture, executionContext);
                    return;
                }
            }
            {
                TestFixture fixture = test as TestFixture;

                if (fixture != null) {
                    this._testFixtureExecutionTracker.HandleTestStart(fixture, executionContext);
                    return;
                }
            }
        }
    }
}

